#!/usr/bin/env python
# coding: utf-8

# In[70]:


import os
import numpy as np
import pandas as pd


# In[71]:


# Load the datasets
file_path_1 = '../../Datasets/Supervised Learning Inputs/MLInput_ATP_TI_cleaned_supervised.csv'
file_path_2 = '../../Datasets/Supervised Learning Inputs/MCAS_AADP.csv'

data1 = pd.read_csv(file_path_1, encoding = "cp1252")
data2 = pd.read_csv(file_path_2, encoding = "cp1252")

data1['UPN'] = data1['UPN'].str.split('@').str[0]


# In[72]:


# Merge the datasets
merged_data = pd.merge(data1, data2, on='UPN', how='outer')
merged_data


# In[73]:


# Fill missing columns with 0
merged_data = merged_data.fillna(0)

def calculate_avg_probability(row):
    if row['AvgProbability_x'] == 0:
        return row['AvgProbability_y']
    elif row['AvgProbability_y'] == 0:
        return row['AvgProbability_x']
    else:
        return (row['AvgProbability_x'] + row['AvgProbability_y']) / 2

merged_data['AvgProbability'] = merged_data.apply(calculate_avg_probability, axis=1)
merged_data['UPN Count'] = merged_data['UPN Count_x'] + merged_data['UPN Count_y']
merged_data = merged_data.drop(columns=['AvgProbability_x', 'AvgProbability_y','UPN Count_x','UPN Count_y','Unnamed: 0_x', 'Unnamed: 0_y', 'Unnamed: 0.1'])

# Save the merged dataset
merged_file_path = '../../Datasets/Supervised Learning Inputs/ATP_TI_MCAS_AADP.csv'  # Replace with your desired output path
merged_data['AvgProbability'] = merged_data['AvgProbability'].round(4)
merged_data.to_csv(merged_file_path, index=False)


# In[79]:


weights = {
    'Malware': 0.25,
    'Malicious URL reputation': 0.23,
    'Brand impersonation': 0.21,
    'Threats': 0.21,
    'Suspicious Email': 0.19,
    'Failed log on': 0.19,
    'Delete messages from Deleted Items folder': 0.17
}

merged_data['weighted_sum'] = sum(merged_data[feature] * weight for feature, weight in weights.items())
merged_data['vulnerability_score'] = merged_data['weighted_sum'] / merged_data['weighted_sum'].max()


# In[80]:


merged_data.to_csv('../../Datasets/Supervised Learning Inputs/test.csv')

